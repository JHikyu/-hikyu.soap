const http=require("http"),fs=require("fs"),mime=require("mime"),url=require("url"),ejs=require("ejs"),pug=require("pug"),events=require("events"),eventEmitter=new events.EventEmitter;var routes={};function init(n){return new Promise((e,t)=>{try{http.createServer(async function(o,a){o.post=new Promise((t,e)=>{var n;"POST"==o.method&&(n="",o.on("data",function(e){n+=e}),o.on("end",function(){const e=n.split("&");n={},e.forEach(e=>{var[e,t]=e.split("=");n[e]=t}),t(n)}))});var{pathname:e,query:t}=url.parse(o.url,!0);eventEmitter.emit("request",{path:o.url}),o.query=t,a.send=function(e){a.writeHead(200,{"Content-Type":"text/plain"}),a.end(e),eventEmitter.emit("send",{path:o.url})},a.json=function(e){a.writeHead(200,{"Content-Type":"text/json"}),a.end(JSON.stringify(e)),eventEmitter.emit("json",{path:o.url})},a.render=function(i,r){fs.existsSync("./views/"+i)?fs.readFile("./views/"+i,function(e,t){if(e&&(a.writeHead(200,{"Content-Type":"text/plain"}),a.end("an erorr occured")),i.endsWith(".ejs")){a.writeHead(200,{"Content-Type":"text/html"});const n=ejs.compile(t.toString());a.write(n(r)),a.end()}else i.endsWith(".pug")?(a.writeHead(200,{"Content-Type":"text/html"}),fn=pug.compile(t,{filename:"./views/"+i,pretty:!0}),a.write(fn(r))):(a.writeHead(200,{"Content-Type":"text/html"}),a.write(t)),a.end();eventEmitter.emit("render",{path:o.url,file:i})}):(a.writeHead(404,{"Content-Type":"text/plain"}),a.end(`Cannot ${o.method} `+o.url))},routes[e]&&routes[e].method===o.method?routes[e].callback(o,a):fs.existsSync("./public"+e)?(t=await readFileData(e),a.writeHead(200,{"Content-Type":mime.getType("./public"+e)}),a.end(t),eventEmitter.emit("load",{path:e,"Content-Type":mime.getType("./public"+e)})):(a.writeHead(404,{"Content-Type":"text/plain"}),a.end(`Cannot ${o.method} `+e),eventEmitter.emit("404",{path:e}))}).listen(n),eventEmitter.emit("started",{port:n}),e(n)}catch(e){t(e)}})}function on(e,t){eventEmitter.on(e,t)}function once(e,t){eventEmitter.once(e,t)}function get(e,t){routes[e]={method:"GET",callback:t}}function post(e,t){routes[e]={method:"POST",callback:t}}async function readFileData(e){return new Promise((n,t)=>{try{fs.readFile("./public"+e,(e,t)=>{n(t)})}catch(e){t(e)}})}module.exports={init:init,on:on,once:once,get:get,post:post};