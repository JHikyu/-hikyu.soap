const http=require("http"),fs=require("fs"),url=require("url"),ev=require("events"),eventEmitter=new ev.EventEmitter,ejs=require("ejs"),pug=require("pug"),mime=require("mime"),{on,once}=require("./src/events")(eventEmitter),routes=require("./src/routes"),responseFunctions=require("./src/responseFunctions"),requestParameters=require("./src/requestParameters"),readFileData=require("./src/misc")(fs)["readFileData"];function init(r){return new Promise((e,t)=>{try{http.createServer(async function(e,t){var r,i=url.parse(e.url,!0)["pathname"];eventEmitter.emit("request",{path:i}),requestParameters(e),responseFunctions(e,t,eventEmitter),routes.check(i,e,t)||(fs.existsSync("./public"+i)?(r=await readFileData(i),t.writeHead(200,{"Content-Type":mime.getType("./public"+i)}),t.end(r),eventEmitter.emit("load",{path:i,"Content-Type":mime.getType("./public"+i)})):(t.writeHead(404,{"Content-Type":"text/plain"}),t.end(`Cannot ${e.method} `+i),eventEmitter.emit("404",{path:i})))}).listen(r),eventEmitter.emit("started",{port:r}),e(r)}catch(e){t(e)}})}module.exports={init:init,on:on,once:once,get:routes.get,post:routes.post};